<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>